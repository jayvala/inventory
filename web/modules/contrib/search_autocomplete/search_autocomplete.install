<?php

/**
 * @file
 * Install, update and uninstall functions for the search autocomplete module.
 */

/**
 * Implements hook_install()
 */
function search_autocomplete_install() {
  \Drupal\Core\Cache\Cache::invalidateTags(['library_info']);
  \Drupal::cache('render')->deleteAll();
  \Drupal::service('asset.css.collection_optimizer')->deleteAll();
  \Drupal::service('asset.js.collection_optimizer')->deleteAll();
  _drupal_flush_css_js();
}

/**
 * Implements hook_requirements().
 */
function search_autocomplete_requirements($phase) {
  $requirements = [];

  // Check to see if the DOMPurify library is available.
  if ($phase == 'runtime') {
    // @todo Remove this conditional once 8.9 is the minimum supported core version.
    if (\Drupal::hasService('library.libraries_directory_file_finder')) {
      /** @var \Drupal\Core\Asset\LibrariesDirectoryFileFinder $library_file_finder */
      $library_file_finder = \Drupal::service('library.libraries_directory_file_finder');
      $found = (bool) $library_file_finder->find('dompurify/dist/purify.min.js');
    }
    else {
      $path = DRUPAL_ROOT . '/libraries/dompurify/dist/purify.min.js';
      $found = file_exists($path);

      // Find the library in the profiles path if not found.
      if (!$found) {
        $path = \Drupal::service('extension.list.profile')->getPath(\Drupal::installProfile());
        $path .= '/libraries/dompurify/dist/purify.min.js';
        $found = file_exists($path);
      }
    }

    if (!$found) {
      $requirements['dompurify'] = [
        'title' => t('DOMPurify'),
        'description' => t('DOMPurify library not found. Please consult the search_autocomplete module README.md for installation instructions.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }
  return $requirements;
}

/**
 * Nothing but force a clean cache.
 */
function search_autocomplete_update_8102() {
}

/**
 * Rename basic-blue to basic.
 */
function search_autocomplete_update_8300() {
  $configs = \Drupal::entityTypeManager()->getStorage('autocompletion_configuration')->loadMultiple();

  foreach ($configs as $config) {
    if ($config->get('theme') === 'basic-blue.css') {
      $config->set('theme', 'basic.css');
      $config->save();
    }
  }
  return t('Renamed basic-blue theme to basic.');
}
